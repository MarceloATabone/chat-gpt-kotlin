[versions]
kotlin = "1.7.10"
serialization = "1.4.32"
postgres = "42.5.1"
logger = "1.2.11"
ktor = "2.2.2"
exposed = "0.41.1"
date-time = "0.3.0"
swagger-codegen = "1.0.36"
koin = "3.4.0"
junit-jupiter = "5.8.2"
mockk = "1.12.0"
coroutines = "1.5.2"
jbcrypt = "0.4"



[libraries]
#Ktor
ktor-server-content-negotiation-jvm = { module = "io.ktor:ktor-server-content-negotiation-jvm", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-server-host-common = { module = "io.ktor:ktor-server-host-common", version.ref = "ktor" }
ktor-server-netty-jvm = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth", version.ref = "ktor" }
ktor-server-auth-jwt = { module = "io.ktor:ktor-server-auth-jwt", version.ref = "ktor" }
ktor-logger = { module = "ch.qos.logback:logback-classic", version.ref = "logger" }

#Kotr-Client
ktor-client = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-content = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }

#Postgres
postgres = { module = "org.postgresql:postgresql", version.ref = "postgres" }
postgres-exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
postgres-exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
postgres-exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }

#Kotlin
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "date-time" }
exposed-java-time = { module = "org.jetbrains.exposed:exposed-java-time", version.ref = "exposed" }

#Test
junit-test = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
ktor-server-tests-jvm = { module = "io.ktor:ktor-server-tests-jvm", version.ref = "ktor" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit-jupiter" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }

#OpenAPI and Swagger
ktor-server-openapi = { module = "io.ktor:ktor-server-openapi", version.ref = "ktor" }
ktor-server-swagger = { module = "io.ktor:ktor-server-swagger", version.ref = "ktor" }
ktor-server-resources = { module = "io.ktor:ktor-server-resources", version.ref = "ktor" }
ktor-server-html-builder = { module = "io.ktor:ktor-server-html-builder", version.ref = "ktor" }
swagger-codegen = { module = "io.swagger.codegen.v3:swagger-codegen-generators", version.ref = "swagger-codegen" }

#Others
koin-ktor = { module = "io.insert-koin:koin-ktor", version.ref = "koin" }
koin-logger = { module = "io.insert-koin:koin-logger-slf4j", version.ref = "koin" }
jbcrypt = { module = "org.mindrot:jbcrypt", version.ref = "jbcrypt" }